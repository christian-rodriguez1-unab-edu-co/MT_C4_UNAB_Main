# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  set-variables:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    # set resource class
    resource_class: small
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "create terrafom.tfvars"
          command: |
            cd ~/project/tf_trasversal/
            printenv > terraform.tfvars
            cat terraform.tfvars
      - run:
          name: "create terraform-states_bucket_credentials"
          command: |
            cd ~/project/tf_trasversal/
            echo "[default]" >> terraform-states_bucket_credentials
            echo "aws_access_key_id=$aws_access_key_id" >> terraform-states_bucket_credentials
            echo "aws_secret_access_key=$aws_secret_access_key" >> terraform-states_bucket_credentials
            cat terraform-states_bucket_credentials
      - run:
          name: terraform init & plan
          command: |
            cd ~/project/tf_trasversal/
            terraform init -input=false
            terraform plan -out tfapply -var-file terraform.tfvars            

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  my-workflow:
    jobs:
      - set-variables:
          context: tf-def
        